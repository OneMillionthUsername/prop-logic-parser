
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ATOM EQUIVALENT IMPLIES LPAREN NEGATION OR RPARENexpr : ATOMexpr : LPAREN expr RPARENexpr : NEGATION exprexpr : expr AND expr\n            | expr OR expr\n            | expr IMPLIES expr\n            | expr EQUIVALENT expr'
    
_lr_action_items = {'ATOM':([0,3,4,5,6,7,8,],[2,2,2,2,2,2,2,]),'LPAREN':([0,3,4,5,6,7,8,],[3,3,3,3,3,3,3,]),'NEGATION':([0,3,4,5,6,7,8,],[4,4,4,4,4,4,4,]),'$end':([1,2,10,11,12,13,14,15,],[0,-1,-3,-4,-5,-6,-7,-2,]),'AND':([1,2,9,10,11,12,13,14,15,],[5,-1,5,5,5,5,5,5,-2,]),'OR':([1,2,9,10,11,12,13,14,15,],[6,-1,6,6,6,6,6,6,-2,]),'IMPLIES':([1,2,9,10,11,12,13,14,15,],[7,-1,7,7,7,7,7,7,-2,]),'EQUIVALENT':([1,2,9,10,11,12,13,14,15,],[8,-1,8,8,8,8,8,8,-2,]),'RPAREN':([2,9,10,11,12,13,14,15,],[-1,15,-3,-4,-5,-6,-7,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,3,4,5,6,7,8,],[1,9,10,11,12,13,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> ATOM','expr',1,'p_expr_atom','myparser.py',45),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','myparser.py',49),
  ('expr -> NEGATION expr','expr',2,'p_expr_not','myparser.py',53),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','myparser.py',57),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','myparser.py',58),
  ('expr -> expr IMPLIES expr','expr',3,'p_expr_binop','myparser.py',59),
  ('expr -> expr EQUIVALENT expr','expr',3,'p_expr_binop','myparser.py',60),
]
